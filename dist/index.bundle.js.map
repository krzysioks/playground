{"version":3,"file":"index.bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/style/base.css","webpack:///./src/Playground.js","webpack:///./src/common/utils.js","webpack:///./src/component/Hooks.js","webpack:///./src/component/PgInput.js","webpack:///./src/component/TaskLogin.js","webpack:///./src/component/TaskMainView.js","webpack:///./src/component/TaskRegister.js","webpack:///./src/component/Unauthorized.js","webpack:///./src/index.js","webpack:///./src/style/base.css?9bc7"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/index.js\",\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"html,\\nbody {\\n\\theight: 100%;\\n\\tbackground-color: #d3d3d3;\\n}\\n.dark {\\n\\tbackground-color: rgb(211, 211, 211);\\n}\\n.app {\\n\\theight: 100%;\\n}\\n.loginCard {\\n\\twidth: 300px;\\n\\theight: 450px;\\n}\\n.statusContainer {\\n\\ttop: 7px;\\n\\tmargin: 0px 45px 0px 45px;\\n}\\n.statusLabel {\\n\\ttop: -2px;\\n}\\n.pointer {\\n\\tcursor: pointer !important;\\n}\\n\\n.task-btn {\\n\\theight: 36px !important;\\n\\tpadding: 5px 15px 5px 15px;\\n}\\n\\n#playground > div > div > div:nth-child(2) > form > div > div:nth-child(1) {\\n\\twidth: 100% !important;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from \"react\";\nimport Hooks from \"./component/Hooks\";\nimport TaskLogin from \"./component/TaskLogin\";\nimport TaskRegister from \"./component/TaskRegister\";\nimport TaskMainView from \"./component/TaskMainView\";\nimport Unauthorized from \"./component/Unauthorized\";\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nconst Playground = () => {\n  return (\n    // router used to route between entry point components which implements different exercises\n    //hooks - simple example of hooks\n    //task - app to learn how to use: frontend - hooks, formik (building forms), validation; backend - REST, authentication, mongodb\n    <HashRouter>\n      <Switch>\n        <Route path=\"/hooks\" component={Hooks} />\n        <Route path=\"/task/login\" component={TaskLogin} />\n        <Route path=\"/task/register\" component={TaskRegister} />\n        <Route path=\"/task/mainview\" component={TaskMainView} />\n        <Route path=\"/task/unauthorized\" component={Unauthorized} />\n        <Redirect from=\"/\" to=\"/task/login\" exact />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Playground;\n","export async function postXhr(url, content = {}, header = {}) {\n    let headerObj = {\n        'Content-Type': 'application/json'\n    };\n\n    if (Object.keys(header)) {\n        headerObj = Object.assign(headerObj, header);\n    }\n\n    const fetchResponse = await fetch(url, {\n        method: 'POST',\n        credentials: 'include',\n        headers: new Headers(headerObj),\n        body: JSON.stringify(content)\n    });\n    const statusResponse = checkStatus(fetchResponse);\n    return parseJSON(statusResponse);\n}\n\nexport async function getXhr(url, header = {}) {\n    let headerObj = {\n        'Content-Type': 'application/json'\n    };\n\n    if (Object.keys(header)) {\n        headerObj = Object.assign(headerObj, header);\n    }\n\n    const fetchResponse = await fetch(url, {\n        credentials: 'include',\n        method: 'GET',\n        headers: new Headers(headerObj)\n    });\n    const statusResponse = checkStatus(fetchResponse);\n    return parseJSON(statusResponse);\n}\n\nfunction parseJSON(response) {\n    return response.json();\n}\nfunction checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n        return response;\n    } else {\n        const error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n    }\n}","import React, { useState, useEffect } from 'react';\nconst Hooks = () => {\n    // useEffect hook is called after every render. To simulate componentDidMount lifecycle method pass empty array as a second argument. useEffect() will be called after render only if any parameter from the list have changed.\n    useEffect(() => {\n        fetch('./test')\n            .then(res => res.json())\n            .then(response => {\n                console.log('response', response);\n            });\n    }, []);\n\n    const [counter, setCounter] = useState(0);\n    const _onClickHandler = () => {\n        const newValue = counter + 1;\n        setCounter(newValue);\n    };\n\n    return (\n        <div>\n            <div>Counter: {counter}</div>\n            <button onClick={_onClickHandler}>Count</button>\n        </div>\n    );\n}\nexport default Hooks;","import React from \"react\";\nimport { Input, FormFeedback } from \"reactstrap\";\n\nconst PgInput = ({ field, form: { touched, errors }, ...props }) => (\n  <div>\n    <Input\n      {...field}\n      {...props}\n      invalid={!!(touched[field.name] && errors[field.name])}\n    />\n    {touched[field.name] && errors[field.name] && (\n      <FormFeedback>{errors[field.name]}</FormFeedback>\n    )}\n  </div>\n);\n\nexport default PgInput;\n","import React from 'react';\nimport useLocalStorage from 'react-use-localstorage';\nimport { Link, withRouter } from 'react-router-dom';\nimport PgInput from './PgInput';\nimport { Card, CardBody, CardTitle, Button } from 'reactstrap';\nimport { Formik, Field, Form } from 'formik';\nimport { postXhr } from '../common/utils';\nimport * as Yup from 'yup';\n\nconst LoginSchema = Yup.object().shape({\n\tusername: Yup.string()\n\t\t.min(2, 'User name is too short')\n\t\t.max(50, 'User name is too long')\n\t\t.required('Username is required'),\n\tpassword: Yup.string()\n\t\t.min(8, 'Password too short')\n\t\t.matches(\n\t\t\t/(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()])/,\n\t\t\t'Password must have at least one: large and small letter, number, special character \"!@#$%^&*())\"'\n\t\t)\n\t\t.required('Password is required'),\n});\n\nconst TaskLogin = (props) => {\n\tconst [, setItem] = useLocalStorage('token', '');\n\tconst handleSubmit = async (values, actions) => {\n\t\tconst { isUser, passwordMatched, token } = await postXhr(\n\t\t\t'/task/login',\n\t\t\tvalues\n\t\t);\n\t\tif (isUser) {\n\t\t\tif (passwordMatched) {\n\t\t\t\t//case when all ok. navigate to task main view which requires authentication and pass token in localStorage\n\t\t\t\tsetItem(token);\n\t\t\t\tprops.history.push('/task/mainview');\n\t\t\t} else {\n\t\t\t\tactions.setErrors({ password: 'Password does not match' });\n\t\t\t}\n\t\t} else {\n\t\t\tactions.setErrors({ username: 'User does not exist' });\n\t\t}\n\t\tactions.setSubmitting(false);\n\t};\n\n\tconst handleRegister = () => {\n\t\tprops.history.push('/task/register');\n\t};\n\n\treturn (\n\t\t<div className=\"app d-flex justify-content-center align-items-center\">\n\t\t\t<Card className=\"loginCard\">\n\t\t\t\t<CardBody>\n\t\t\t\t\t<CardTitle>\n\t\t\t\t\t\tWelcome to Task Application Login Page\n\t\t\t\t\t</CardTitle>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={{ username: '', password: '' }}\n\t\t\t\t\t\tvalidationSchema={LoginSchema} //schema used to validate form fields\n\t\t\t\t\t\t//below are destructured Formik props, which represent the state of form (i.e. if it is valid or not, if any value changed...)\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\tcomponent={({ isValid, isSubmitting }) => (\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tcomponent={PgInput}\n\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\tclassName=\"mt-1\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"user name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* PgInput wraps reactstrap form input component and add error msg\n                                 placeholder so it is possible to use material design components with Formik */}\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tcomponent={PgInput}\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tclassName=\"mt-1\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className=\"d-flex flex-row justify-content-between mt-2\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tdisabled={!isValid || isSubmitting}\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tlog in\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tonClick={handleRegister}\n\t\t\t\t\t\t\t\t\t\tclassName=\"align-self-end\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tregister\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\nexport default withRouter(TaskLogin);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport useLocalStorage from 'react-use-localstorage';\nimport PgInput from './PgInput';\nimport {\n\tCard,\n\tCardBody,\n\tButton,\n\tLabel,\n\tTable,\n\tInput,\n\tFormFeedback,\n\tUncontrolledTooltip,\n} from 'reactstrap';\nimport { Formik, Field, Form } from 'formik';\nimport { getXhr, postXhr } from '../common/utils';\nimport { MdModeEdit, MdDelete, MdDone, MdUndo } from 'react-icons/md';\nimport * as Yup from 'yup';\n\nconst TaskSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(2, 'Name of task is too short')\n\t\t.max(160, 'Name of task is too long')\n\t\t.required('Name of the task is required'),\n});\n\nconst TaskMainView = (props) => {\n\tconst [token] = useLocalStorage('token');\n\tconst [taskList, setTaskList] = useState([]);\n\tconst [isAuthorized, setIsAuthorized] = useState(false);\n\tconst [editRowId, setEditRowId] = useState(null);\n\n\t//useRef to get reference to formik component to be able to reset form from refresh button\n\tconst refForm = useRef(null);\n\n\t// useEffect hook is called after every render. To simulate componentDidMount lifecycle method pass empty array as a second argument. useEffect() will be called after render only if any parameter from the list have changed.\n\tuseEffect(() => {\n\t\tgetTaskList();\n\t}, []);\n\n\tconst handleSubmit = async (values, actions) => {\n\t\ttry {\n\t\t\tconst { taskAdded, statusList } = await postXhr(\n\t\t\t\t'/task/add',\n\t\t\t\tvalues,\n\t\t\t\t{\n\t\t\t\t\t'x-auth': token,\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (taskAdded) {\n\t\t\t\tactions.resetForm();\n\t\t\t\tactions.setStatus({ msg: 'Task added' });\n\t\t\t\tawait getTaskList();\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tactions.setStatus({ msg: '' });\n\t\t\t\t}, 5000);\n\t\t\t} else {\n\t\t\t\tconst errorObj = {};\n\t\t\t\tstatusList.forEach(([key, , msg]) => {\n\t\t\t\t\terrorObj[key] = msg;\n\t\t\t\t});\n\t\t\t\tactions.setErrors(errorObj);\n\t\t\t}\n\t\t\tactions.setSubmitting(false);\n\t\t} catch (err) {\n\t\t\tsetIsAuthorized(false);\n\t\t\tprops.history.push('/task/unauthorized');\n\t\t}\n\t};\n\n\tconst handleEditMode = async (key) => {\n\t\tconst keyToSet = key === editRowId ? null : key;\n\t\tsetEditRowId(keyToSet);\n\t};\n\n\tconst handleAction = async (url, body) => {\n\t\ttry {\n\t\t\tawait postXhr(url, body, {\n\t\t\t\t'x-auth': token,\n\t\t\t});\n\t\t\tgetTaskList();\n\t\t} catch (err) {\n\t\t\tsetIsAuthorized(false);\n\t\t\tprops.history.push('/task/unauthorized');\n\t\t}\n\t};\n\n\tconst handleKeyDown = async (_id, evt) => {\n\t\tif (evt.keyCode === 13) {\n\t\t\thandleAction('/task/edit', {\n\t\t\t\t_id,\n\t\t\t\tname: evt.target.value,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleLogout = async () => {\n\t\ttry {\n\t\t\tawait postXhr(\n\t\t\t\t'task/logout',\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\t'x-auth': token,\n\t\t\t\t}\n\t\t\t);\n\t\t\tprops.history.push('/task/login');\n\t\t} catch (err) {\n\t\t\tsetIsAuthorized(false);\n\t\t\tprops.history.push('/task/unauthorized');\n\t\t}\n\t};\n\n\tconst getTaskList = async () => {\n\t\ttry {\n\t\t\t//if any field in the row is in edit mode -> turn it off\n\t\t\tsetEditRowId(null);\n\t\t\tconst { tasks } = await getXhr('/task/all', {\n\t\t\t\t'x-auth': token,\n\t\t\t});\n\t\t\tsetTaskList(tasks);\n\t\t\tsetIsAuthorized(true);\n\t\t} catch (err) {\n\t\t\tsetIsAuthorized(false);\n\t\t\tprops.history.push('/task/unauthorized');\n\t\t}\n\t};\n\n\tconst handleRefresh = async () => {\n\t\t//reset formik form using reference refForm\n\t\trefForm.current.handleReset();\n\t\tgetTaskList();\n\t};\n\n\treturn isAuthorized ? (\n\t\t<div>\n\t\t\t<Card className=\"dark\">\n\t\t\t\t<CardBody className=\"d-flex flex-row justify-content-between\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"task-btn\"\n\t\t\t\t\t\tonClick={handleRefresh}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t>\n\t\t\t\t\t\trefresh\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"task-btn\"\n\t\t\t\t\t\tonClick={handleLogout}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t>\n\t\t\t\t\t\tlogout\n\t\t\t\t\t</Button>\n\t\t\t\t</CardBody>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tref={refForm}\n\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tstatus: false,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalidationSchema={TaskSchema}\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\tcomponent={({ isValid, isSubmitting, status }) => (\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<div className=\"d-flex flex-row w-100\">\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tcomponent={PgInput}\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"mr-2\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"task name\"\n\t\t\t\t\t\t\t\t\t\tmaxLength={160}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"position-relative statusContainer\">\n\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\tcomponent={PgInput}\n\t\t\t\t\t\t\t\t\t\t\tname=\"status\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"pointer\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"_taskstatus\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"position-relative statusLabel pointer\"\n\t\t\t\t\t\t\t\t\t\t\tfor=\"_taskstatus\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tcompleted\n\t\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tdisabled={!isValid || isSubmitting}\n\t\t\t\t\t\t\t\t\t\tclassName=\"task-btn\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tadd\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{status && status.msg ? (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Input type=\"hidden\" valid />\n\t\t\t\t\t\t\t\t\t\t<FormFeedback valid>\n\t\t\t\t\t\t\t\t\t\t\t{status.msg}\n\t\t\t\t\t\t\t\t\t\t</FormFeedback>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</CardBody>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Table striped dark>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{taskList.length ? (\n\t\t\t\t\t\t\t\ttaskList.map(\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t{ name, status, creationDate, _id },\n\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t) => (\n\t\t\t\t\t\t\t\t\t\t<tr key={key}>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t{editRowId === key ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyDown={handleKeyDown.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t{new Date(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcreationDate\n\t\t\t\t\t\t\t\t\t\t\t\t).toLocaleDateString('pl-PL', {\n\t\t\t\t\t\t\t\t\t\t\t\t\thour: '2-digit',\n\t\t\t\t\t\t\t\t\t\t\t\t\tminute: '2-digit',\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t{status\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Completed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'Not Completed'}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"d-flex justify-content-sm-around\">\n\t\t\t\t\t\t\t\t\t\t\t\t{status ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pointer p-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAction.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/task/edit',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MdUndo />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pointer p-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAction.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/task/edit',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstatus: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MdDone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pointer p-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleEditMode.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MdModeEdit />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pointer p-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAction.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'/task/delete',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MdDelete />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colSpan=\"4\">No data to display</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</div>\n\t) : (\n\t\t<div>Loading...</div>\n\t);\n};\nexport default withRouter(TaskMainView);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PgInput from './PgInput';\nimport { Card, CardBody, CardTitle, Button, FormFeedback, Input } from 'reactstrap';\nimport { Formik, Field, Form } from 'formik';\nimport { postXhr } from '../common/utils';\nimport * as Yup from 'yup';\n\nconst RegisterSchema = Yup.object().shape({\n    username: Yup.string()\n        .min(2, 'User name is too short')\n        .max(50, 'User name is too long')\n        .required('Username is required'),\n    password: Yup.string()\n        .min(8, 'Password too short')\n        .matches(/(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()])/, 'Password must have at least one: large and small letter, number, special character \"!@#$%^&*())\"')\n        .required('Password is required'),\n    email: Yup.string()\n        .required('Email is required')\n        .email('Email is invalid')\n});\n\nconst TaskRegister = () => {\n    const handleSubmit = async (values, actions) => {\n        //check if password match with retyped one\n        if (values.password === values.retypedpassword) {\n            const { userRegistered, statusList } = await postXhr('/task/register', values);\n            if (userRegistered) {\n                actions.setStatus({ msg: `Dear ${values.username}, you signed up successfully.` });\n            } else {\n                const errorObj = {};\n                statusList.forEach(([key, , msg]) => {\n                    errorObj[key] = msg;\n                });\n                actions.setErrors(errorObj);\n            }\n        } else {\n            actions.setErrors({\n                retypedpassword: 'Passwords do not match'\n            });\n        }\n\n        actions.setSubmitting(false);\n    }\n\n    return (\n        <div className=\"app d-flex justify-content-center align-items-center\">\n            <Card className=\"loginCard\">\n                <CardBody>\n                    <CardTitle>Please sign up to use Task App</CardTitle>\n                    <Formik\n                        initialValues={{ username: '', password: '', email: '', retypedpassword: '' }}\n                        validationSchema={RegisterSchema}\n                        onSubmit={handleSubmit}\n                        component={({ isValid, isSubmitting, status }) => (\n                            < Form >\n                                <Field component={PgInput} name=\"username\" className=\"mt-1\" type=\"text\" placeholder=\"user name\" />\n                                <Field component={PgInput} name=\"password\" className=\"mt-1\" type=\"password\" placeholder=\"password\" />\n                                <Field component={PgInput} name=\"retypedpassword\" className=\"mt-1\" type=\"password\" placeholder=\"retype password\" />\n                                <Field component={PgInput} name=\"email\" className=\"mt-1\" type=\"text\" placeholder=\"example@domian.com\" />\n\n                                {status && status.msg ? (<div>\n                                    <Input type=\"hidden\" valid />\n                                    <FormFeedback valid>{status.msg}</FormFeedback>\n                                </div>\n                                ) : ''}\n                                <div className=\"d-flex flex-row justify-content-between mt-2\">\n                                    <Button type=\"submit\" disabled={!isValid || isSubmitting} color=\"secondary\">sign up</Button>\n                                    <Link className=\"align-self-end\" to=\"/task/login\">cancel</Link>\n                                </div>\n                            </Form>\n                        )}\n                    />\n                </CardBody>\n            </Card>\n        </div >\n    );\n}\nexport default withRouter(TaskRegister);","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Alert } from 'reactstrap';\n\n\nconst Unauthorized = () => {\n    return (\n        <div>\n            <Alert color=\"danger\" className=\"d-flex justify-content-center\">\n                You are not authorized to access this page. Please<Link className=\"ml-1\" to=\"/task/login\"> log in</Link>\n            </Alert>\n        </div>\n    );\n}\nexport default withRouter(Unauthorized);","import Playground from \"./Playground\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./style/base.css\";\n// import registerServiceWorker from \"./registerServiceWorker\";\nimport * as runtime from \"offline-plugin/runtime\";\nruntime.install({\n  onUpdating: () => {\n    console.log(\"SW Event:\", \"onUpdating\");\n  },\n  onUpdateReady: () => {\n    console.log(\"SW Event:\", \"onUpdateReady\");\n    // Tells to new SW to take control immediately\n    runtime.applyUpdate();\n  },\n  onUpdated: () => {\n    console.log(\"SW Event:\", \"onUpdated\");\n    // Reload the webpage to load into the new version\n    window.location.reload();\n  },\n\n  onUpdateFailed: () => {\n    console.log(\"SW Event:\", \"onUpdateFailed\");\n  }\n});\nReactDOM.render(<Playground />, document.getElementById(\"playground\"));\n// registerServiceWorker();\n","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./base.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"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","sourceRoot":""}